org 100h
jmp start

addition:
;addition
;mov cx,8;number of words in multiplicand and result
xor bx,bx
CLC
here: mov ax,[si+bx]
      push si
      mov si,dx
	    adc ax,[di+bx]
	    mov [si+bx],ax
      pop si
	    inc bx
	    inc bx
	    loop here
ret

multiplication:
mov cx,512; will run for every bit
xor bx,bx
run:
push cx;preserve the value of cx because it will also be used agin

mov cx,31;number of words of (multiplier-1)
mov bx,62;last address of the number
call shiftright
jnc skipAdd
;addition
mov cx,32;number of words in multiplicand and result
xor bx,bx
CLC
here1: mov ax,[di+bx]
      push si
      mov si,dx
	    adc [si+bx],ax
      pop si
	    inc bx
	    inc bx
	    loop here1

skipAdd:
;left shift the multiplicand
pushf ;preserve the flags

xor bx,bx
mov cx,31;number of words in the (multiplicand-1)
call shiftleft
popf;restore the flags

pop cx;restore the main loop counter
loop run
ret

shiftleft:
shl word [di+bx],1
  shifL:
  inc bx
  inc bx
  rcl word [di+bx],1
  loop shifL
ret

shiftright:
shr word[si+bx],1
  shifR:
  dec bx
  dec bx
  rcr word[si+bx],1
  loop shifR
ret

start:
mov si,num1
mov di,num2
mov dx,addRes1
mov cx,32
call addition

mov si,num1
mov di,num2
mov dx,addRes2
mov cx,32
call addition


mov si,addRes1;multiplier
mov di,addRes2;multiplicand
mov dx,powerRes;result store
call multiplication


mov ax,4c00h
int 21h
;padded to complete 512 bits
num1: dw 0x9900,0x7788,0x5566,0x3344,0x1122,0xEEFF,0xCCDD,0xAABB,0x9900,0x7788,0x5566,0x3344,0x1122,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
num2: dw 0xCDEF,0xEFAB,0xABCD,0x7890,0x3456,0x9012,0x5678,0x1234,0x7890,0x3456,0x0012,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000

;1024bit
powerRes : dw 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
;1024bit
addRes2   : dw 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
;512bit
addRes1   : dw 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
